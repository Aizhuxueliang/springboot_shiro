<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD com.example.Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">

    <resultMap id="resultUser" type="com.example.demo.entity.User">
        <result property="id" column="id" />
		<result property="username" column="username" />
    </resultMap>

    <select id="findUserByName" resultMap="resultUser" parameterType="String">
		select
			id,
			username
		from user where
		    username = #{userName}
	</select>

	<delete id="removeUserRoleByRoleId" parameterType="int">
		delete from user_role where role_id = #{id}
	</delete>

	<delete id="removeUserRoleByUserId" parameterType="int">
		delete from user_role where user_id = #{id}
	</delete>

	<select id="queryUserListPage" resultMap="resultUser" parameterType="com.example.demo.entity.User">
		select
			id,
			username
		from user
		<where>
			<if test="id != 0 and id !=null">
				and id = #{id}
			</if>
			<if test="username != null and username !=''">
				and username like concat(concat('%',#{username}),'%')
			</if>
		</where>
			order by id desc
			limit #{reserve1},5
	</select>

	<select id="getUserRowCount" parameterType="com.example.demo.entity.User" resultType="int">
		select count(*) from user
		<where>
			<if test="id != 0 and id != null">
				and id = #{id}
			</if>
			<if test="username != null and username !=''">
				and username like concat(concat('%',#{username}),'%')
			</if>
		</where>
	</select>

    <insert id="insertUser" parameterType="com.example.demo.entity.User">
		insert into user(
			username,
			password,
			reserve
		)values(
			#{userName, jdbcType = VARCHAR},
			#{password, jdbcType = VARCHAR},
			#{reserve, jdbcType = VARCHAR}
	</insert>

	<insert id="addUserRole" parameterType="com.example.demo.entity.User" useGeneratedKeys="true" keyProperty="id">
		<if test="roleList != null and roleList.size() != 0">
			insert into user_role(
				user_id,
				role_id,
				remark
			)values<foreach collection="roleList" item="item" separator=",">(#{id}, #{item.id}, concat(#{username}, 'æ˜¯', #{item.description}))</foreach>
		</if>
	</insert>

    <delete id="deleteUser" parameterType="int">
		delete from user where id = #{id}
	</delete>

    <update id="modify" parameterType="com.example.demo.entity.User">
		update user set
		    user.password = #{password}
		where
			user.id = #{id}
	</update>

</mapper>