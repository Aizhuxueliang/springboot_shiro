<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD com.example.Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">

    <resultMap id="resultUser" type="com.example.demo.entity.User">
        <result property="id" column="id" />
		<result property="username" column="username" />
        <result property="password" column="password" />
        <result property="createTime" column="create_time"/>
		<result property="salt" column="salt"/>
    </resultMap>

    <select id="findUserByName" resultMap="resultUser" parameterType="String">
		select * from user where username = #{userName}
	</select>

	<select id="findUserByLikeName" resultMap="resultUser" parameterType="String">
		select * from user
		where username like concat(concat('%',#{userName}),'%')
		order by id asc
	</select>

	<delete id="removeUserRoleByRoleId" parameterType="int">
		delete from user_role where role_id = #{id}
	</delete>

	<select id="queryPage" resultMap="resultUser" parameterType="Integer">
		select * from user
			order by id asc
			limit #{startRows},5
	</select>

	<select id="getRowCount" resultType="Integer">
		select count(*) from user
	</select>

    <insert id="insertUser" parameterType="com.example.demo.entity.User">
		INSERT INTO user
		(
			id, username, password, create_time, salt
		)
		VALUES (
			#{id},
			#{userName, jdbcType = VARCHAR},
			#{password, jdbcType = VARCHAR},
			#{createTime, jdbcType = TIMESTAMP}
			#{salt, jdbcType = VARCHAR}
		)
	</insert>

    <delete id="delete" parameterType="int">
		delete from user where id = #{id}
	</delete>

    <update id="modify" parameterType="com.example.demo.entity.User">
		update user set
		    user.password = #{password},
		    user.userName = #{username},
		where
			user.id = #{id}
	</update>

</mapper>